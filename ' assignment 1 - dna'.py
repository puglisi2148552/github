' assignment 1 - dna'

# DNA sequence
dna_sequence = "TAACCAGTCAGCGATACACCCACCAATCGTTATTATTACATTACTACGCTTCACATGCTAACCGCAATGTTTCACATTAATGACTGACAAAACATTGATCGTATGTCTTCTATGAGCGGCTATCCAGAACACCTATTATCACATGTTACCAGTGTTGACTCTTTCATAAATACATCCTCGCCGGCCAAGCTCGGTACAAACAAAAGTCCGTATGTACCTGCGCCTGGTGCTCTTCACTAGTTACTCGCAGTGTGGCCAGTGCCTCCCGGGGCGTTTATCTTATGCCAGGTCCGACTAGCAGTCAACGAGTGAGCTGCAGGCGCGTAGCTTGAATCTCTCTATTAGGTCATGGCTCATAAACTACTTGCTGGGAAAGTCTTCCCAGGTTTTTATACGAGCCACGTGTACTAAGCCTTTAGTCGTGAACCACGAATTGCCCGAACCGCAACATCCAAAGGGTGCTCCTGATGACAACTACTAGCTGTTCTCCTTTACTCGAACATTTGGCACCTGGTTATCTGACCTTAAGATCCCATTGGGGAGGCCATCTACCGACGCTATGACGGTTGGGGTGATAGTCTATTTAGAGGTAATGCTATTTTCAAGTTGAAATCCTAACGGATTGCGCGGCGGAGAAAGATAATACACGGGGAGCTAGCCCGTTAGAAAGCGCGAGGTGTAGGACACGGTCGAAAAATTTCTCACACATCCACTCGATGCGAAAGCGTATCTACAAATGCAGCTTCCCATCGGTGATGCACCCCGGATAGCATCGTTATAGGACCTCAATACCTGTAGTGATTCAATCATTACGAAATGGTCTGCAGCATCTCAGTGTGTTCCCATCGGGTACGCGTATGGACTAGTGGATGGTGTTTCGTGCGAGTTTTTGGATGATCACGGGCCCCGTAGAAACTATGCGCGGGGCTTGAT"
# Function to count bases
def count_bases(sequence):
    base_count = {
        'A': sequence.count('A'),
        'G': sequence.count('G'),
        'C': sequence.count('C'),
        'T': sequence.count('T')
    }
    return base_count

# Count the bases
base_counts = count_bases(dna_sequence)

# Display the result
for base, count in base_counts.items():
    print(f"{base}: {count}")
