' assignment 8 - subs'

def find_substring_locations(s, t):
    locations = []
    len_s = len(s)
    len_t = len(t)
    
    for j in range(len_s - len_t + 1):
        if s[j:j + len_t] == t:
            locations.append(j + 1)  # +1 for 1-based indexing
    
    return locations

# Sample Dataset
s = "TGCCACGTTCCCCGATATGCGTTCCCCCGTTCCCGTCGTTCCCGATAGACGTTCCCCGTTCCCGCCGTTCCCGTCGTTCCCACCGTTCCCTCGTTCCCCGTTCCCATCGCGTTCCCCGTTCCCGGCGTTCCCGATACGTTCCCCGGTAACGTTCCCGACCCGTTCCCGGCATGCGTCGTTCCCCGTTCCCAGCGTTCCCCGTTCCCCGTTCCCCGTTCCCCGTTCCCGAGCGTTCCCAGGCCGTTCCCAAATCGTTCCCTGACCGTTCCCGGACCGTTCCCTGCGTTCCCAAGGCAACGTTCCCACTGTACGTTCCCCGTTCGTTCCCCGTTCCCCGTTCCCTCTCATCGTTCCCCGGATCGGCCGTTCCCTCGTTCCCATTGACACGTTCCCAACGTTCCCTAATTGCGTTCCCCGTTCCCACACTGACTCCGTTCCCTCAGCCAACGTTCCCACCACCCCGTTCCCGCGTTCCCCACAGCGTTCCCTTACACGTTCCCCGTTCCCAATTCGTTCCCCCGTTCCCACGCGTTCCCATTATCGTTCCCATCGTTCCCCGGTAAAGCGTTCCCCTTTCGTTCCCACGGAGTCGGGCGTTCCCCGCGTTCCCCGTTCCCGCGTTCCCCTTGCCGTTCCCCGTTCCCGCGTTCCCACGTTCCCCGTTCCCCGTTCCCATTCGTTCCCTCTCCGTTCCCCCGTTCCCGGCCGCGCAGCGTTCCCTCAACGTTCCCGGTGTGTGAATGCCCGTTCCCCGTTCCCCCGTTCCCAGACGTTCCCCGTTCCCCGCGTTCCCCGTTCCCTGCGTTCCC"
t = "CGTTCCCCG"

# Find and print all locations
locations = find_substring_locations(s, t)
print(' '.join(map(str, locations)))
