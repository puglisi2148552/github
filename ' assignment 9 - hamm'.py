' assignment 9 - hamm'

def hamming_distance(s, t):
    # Initialize the distance counter
    distance = 0
    
    # Iterate through each character in the strings
    for char_s, char_t in zip(s, t):
        if char_s != char_t:
            distance += 1  # Increment the counter if characters differ
            
    return distance

# Sample Dataset
s = "ATTCTCGGAGGGCTCAATGGATGGGAATAGAGTTGTTCTATGTCTACGTTAGAAGCGCCCGCTATAGACTTCCAACACTGATTCATCTAACCGTCACGCTGTCATCTGTACTCCTGAATGTACCCGCGAGGCCAAGGCGACCGGGCACCTTGGGTACGCCTGAGACAGAAAAACCGTACGCATTTCGTATCTACCACGGGATTAACGATTCGGACTCTACGCGCCACAAAACTGATATGGTAGTACAACTATAAGGGCTTAGTCCCCCAACCAATCGAAGGCCTGACAGCGGACCGGGCCTTCGAACTGGAAATTCTCACAGTGTCTAGCTTCGACTGACTGCTTCCTCTGTCATTTAACCTCGCTGGAGCTGGCCGCACGATCGCAAGGTGCCCCACTTCATTTCGTCTTAGATGGCTCGCTTGTTAGCAAATAAGGTCCGAGCTATTGAAATATGTGTATTACCTAAGCATATCGTTCTTAGGTGTTGCTGCAGCAGCCGGAGGCAGTCTGCTCGAAATAGTTACCGTGCCCACAATGTTCCATCAGTAGTTACGGAGCGAACCGGTGTACTGTCAACGAGCCTACCTCTTAAGGGGCGTGCCCCTTGCGGAGGTATTAGGCGTGTTCTCGTGATATACGGAGACGGAACGAAGGCCCCATTGGCAATCTAAACAATGGCTGGCGACAATACCGCCTCGCAAGCGTTCCCTTATCACCTCGGCGGGACATAAAATCACAAACCTAGCTCTACCGGGCGAGCACGAATATCCGCCTGGACATCATGCAGAACGACCACACGTAAACGTGAGACATACAGATTCAGACAGAGTGCTTAACGGCAATCATGCTTTGCGAAGACGTAGAAGCAGCTTGGCGCAAAGTAAGCTGTATGACTCAAGTCCCGAGTTGCTCACCTTGTATGCTTCATGCGTAAAAACTCGTATGCTTTTGTATTGTGTAG"
t = "GTTCTTAGATGTAACAAATGTCGGGACTAGTATTCTGCGTGCGCGCGATCTGCAGAGTCTCCTGTAATCTTCCTACACAGAGGCACGTGGCCCTCAGGGTGTGGTCTCCATTACTGCGTCATGCGCGCAGGTTAAGGTCACCGGAAGCCCTGTCTAAGAGTTAGTTCAAACAATACCGCCGATTTCGTATAGAAACGCGAAGCTAGTTAGGGGACTTTATTTCCGACCATAGTAAGATGGTATCGCAAAGTTTCAGAGCTGGTAGGCTCAAGGACCCCGCGCCTCTTGGCGGGCAGCGTCGTGTAGGACATAGTTATTCCAGTGGACTGTGTGTAATGACTGGATTGACTACCAATGTATCTTGCTGTATAGGGGGGAACGATCAAATGTTACCCCTCCTCAACTAGTCTATTACCACACGCTCTTGACTGCCTAAGGTTCACGATTAGCGGGTAAGAATTAGCCCAAAATCGATGATTGTTCTGTGTTTCACCCTCACTATCAGGGTTCCTCAAGATTATCGGCGCGGATTCCCTCTGCTGCCTCGCATAGTACTAGTGTCTACCGTTGTTCACTCAACTAGCCCACAATTTGGTTGGCGTACGGTGATGCGATCGGGTAAACGAGCCGACGAGAGCATCGGATACGATCCGACGTTGGCAAACTCAAACAGAACGCCGCCTAGAGATACGTCCCCCCAGCACTGTTTCCCTAGTCAACACGCAGGGGCATGGACACAGCGAACTAGTCCGACTATTGGAGCACATATGAAGCTCCTCGCATCGAGAAGCAAGATGAGAGGGAGTACTTACGCATCTAAATGCTCCCCGACTACTCTACGGCGAGCTTGATTGGCGAGTGCGAAGAATAACCTCATCGTACAGCAAGTAGTATGTATTAAGTCTAGACTTTTACAAATGTTTTTGTCCAGGCATATAAACGCGGGTGAATTTGTATTGAAGAG"

# Calculate and print the Hamming distance
result = hamming_distance(s, t)
print(result)
